includes:
    - vendor/larastan/larastan/extension.neon
    - vendor/nesbot/carbon/extension.neon
    - phpstan-baseline.neon

parameters:
    paths:
        - app/
        - resources/views
        - routes/

    level: 5
    reportUnmatchedIgnoredErrors: false
    treatPhpDocTypesAsCertain: false

    ignoreErrors:
        # Ignorar el método option() en comandos de Artisan (falso positivo conocido)
        - '#Call to an undefined method Illuminate\\Console\\Command::option\(\)#'

        # Ignorar problemas con model binding automático de Laravel
        - '#Parameter .* of method .* expects .*, .* given#'

        # Ignorar problemas con facades que Larastan no detecta correctamente
        - '#Call to an undefined method Illuminate\\Support\\Facades\\.*::#'

        # Ignorar errores de relaciones que están correctamente definidas pero Larastan no detecta
        - '#Relation .* is not found in App\\Models\\.* model#'

        # Ignorar accesos a propiedades que existen pero Larastan no detecta en modelos
        - '#Access to an undefined property App\\Models\\User::\$cliente#'
        - '#Access to an undefined property Illuminate\\Contracts\\Auth\\Authenticatable::\$password#'
        - '#Access to an undefined property App\\Models\\User\|Illuminate\\Database\\Eloquent\\Collection.*::\$cliente#'
        - '#Access to an undefined property Illuminate\\Contracts\\Auth\\Authenticatable::\$id#'

        # Ignorar problemas con API Resources - PHPStan no detecta correctamente las propiedades del modelo
        - '#Access to an undefined property App\\Http\\Resources\\Api\\.*Resource::\$.*#'
        - '#Call to an undefined method App\\Http\\Resources\\Api\\.*Resource::.*\(\)#'
        - '#Method App\\Http\\Resources\\Api\\.*Resource::toArray\(\) should return array<string, mixed> but returns array<int\|string, mixed>#'

        # Ignorar problemas con relaciones en modelos
        - '#Access to an undefined property App\\Models\\.*::\$.*#'
        - '#Call to an undefined method App\\Models\\.*::.*\(\)#'

        # Ignorar problemas con traits y tipos de ID
        - '#Parameter \#1 \$value of static method Illuminate\\Support\\Facades\\Crypt::encryptString\(\) expects string, int given#'

        # Ignorar operadores ternarios que siempre son verdaderos debido a PHPDoc
        - '#Ternary operator condition is always true#'
        - '#If condition is always true#'

        # Ignorar problemas con number_format cuando se sabe que el valor es numérico
        - '#Parameter \#1 \$num of function number_format expects float, string given#'

        # Ignorar problemas con nullsafe cuando se sabe que no es null
        - '#Using nullsafe property access "\?\->" on left side of \?\? is unnecessary#'

        # Ignorar problemas con is_string en contextos donde ya se sabe que es string
        - '#Call to function is_string\(\) with non-falsy-string will always evaluate to true#'

        # Ignorar llamadas a métodos privados entre controladores relacionados
        - '#Call to private method .* of class .*#'

    # Excluir archivos de testing del análisis en producción
    excludePaths:
        - app/Console/Commands/Testing/*
        - app/Services/EmailService.php
